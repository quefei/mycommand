#!/bin/bash

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

set -eu
#set -x

echo_color()
{
        echo -e "\e[1m\e[40;$2m$1\e[0m"
}

echo_error()
{
        echo_color "$1" "31"
        exit 1
}

echo_warning()
{
        echo_color "$1" "33"
        sleep 5
}

if [[ "$(id -u)" != "0" ]]; then
        echo_error "Error: must run with root"
fi

if [[ -s "/usr/local/bin/myfunction.sh" ]]; then
        . /usr/local/bin/myfunction.sh
else
        echo_error "Error: myfunction.sh not found"
fi

# 全局变量
LNMP_ORG="lnmp1.4.tar.gz"
LNMP_DIR="/usr/local/src/lnmp1.4"
PHP_TGZ="php-7.1.7.tar.bz2"
PHP_DIR="/usr/local/src/php-7.1.7"

MYSQL_VERSION="4"
MYSQL_INNODB="Y"
PHP_VERSION="7"
MEMORY_ALLOCATOR="1"

# 创建 .my.cnf
mysql_create

# 移动 LNMP 包
if [[ -f "/usr/local/src/${LNMP_ORG}" ]]; then
        rm -rf /usr/local/src/${LNMP_ORG}
fi

if [[ -s "/root/myfile/${LNMP_ORG}" ]]; then
        mv /root/myfile/${LNMP_ORG} /usr/local/src/${LNMP_ORG}
else
        echo_error "Error: ${LNMP_ORG} not found"
fi

# 解压 LNMP 包
if [[ -d "$LNMP_DIR" ]]; then
        mv ${LNMP_DIR} ${LNMP_DIR}.bak.$(date +"%Y%m%d%H%M%S")
fi

tar -xzvf /usr/local/src/${LNMP_ORG} -C /usr/local/src

cd ${LNMP_DIR}

# 安装状态
echo "failed" > /root/.lnmp.status

# 实现 LNMP 自动退出
sed -i "/Install lnmp.*completed.*enjoy it/a\    sleep 60; killall tee; exit" ${LNMP_DIR}/include/end.sh
sed -i "/Install lnmp.*completed.*enjoy it/a\    echo \"success\" > /root/.lnmp.status" ${LNMP_DIR}/include/end.sh
sed -i "/Install lnmp.*completed.*enjoy it/a\    # Ivan $(date +"%Y-%m-%d %H:%M:%S")" ${LNMP_DIR}/include/end.sh
sed -i "/Install lnmp.*completed.*enjoy it/a\    " ${LNMP_DIR}/include/end.sh

# 自动输入
VAR1="$MYSQL_VERSION"
VAR2="$MYSQL_PASSWORD"
VAR3="$MYSQL_INNODB"
VAR4="$PHP_VERSION"
VAR5="$MEMORY_ALLOCATOR"

bash install.sh lnmp <<-EOF || true
${VAR1}
${VAR2}
${VAR3}
${VAR4}
${VAR5}
EOF

# 安装状态
if ( grep "failed" /root/.lnmp.status &> /dev/null ); then
        echo_error "Error: install lnmp failed"
fi

rm -rf /root/.lnmp.status

# 复制软件包
touch /usr/local/nginx/logs/access.log

if [[ ! -f "/usr/local/src/${PHP_TGZ}" ]]; then
        cp ${LNMP_DIR}/src/${PHP_TGZ} /usr/local/src/${PHP_TGZ}
fi

cd - &> /dev/null

# 替换配置文件
for CONFIG_FILE in "nginx.conf" "fastcgi.conf"; do
        
        if [[ -s "/root/myfile/${CONFIG_FILE}" ]]; then
                mv /usr/local/nginx/conf/${CONFIG_FILE} /usr/local/nginx/conf/${CONFIG_FILE}.bak.$(date +"%Y%m%d%H%M%S")
                mv /root/myfile/${CONFIG_FILE} /usr/local/nginx/conf/${CONFIG_FILE}
        else
                echo_error "Error: ${CONFIG_FILE} not found"
        fi
        
done

# 创建 .my.cnf
mysql_create

# 设置 MySQL 权限
mysql <<-EOF
use mysql;
select User, Host from user;
update user set Host='%' where User='root';
flush privileges;
exit
EOF

# 安装 PHP 扩展
if [[ -d "$PHP_DIR" ]]; then
        mv ${PHP_DIR} ${PHP_DIR}.bak.$(date +"%Y%m%d%H%M%S")
fi

tar -xjvf /usr/local/src/${PHP_TGZ} -C /usr/local/src

cd ${PHP_DIR}/ext/fileinfo

/usr/local/php/bin/phpize
./configure --with-php-config=/usr/local/php/bin/php-config
make
make install

cd - &> /dev/null

# 替换配置文件
if [[ -s "/root/myfile/php.ini" ]]; then
        mv /usr/local/php/etc/php.ini /usr/local/php/etc/php.ini.bak.$(date +"%Y%m%d%H%M%S")
        mv /root/myfile/php.ini /usr/local/php/etc/php.ini
else
        echo_error "Error: php.ini not found"
fi

# 设置防火墙
systemctl restart firewalld
sleep 3

for SERVICE in "nginx" "mysql" "php-fpm"; do
        /etc/init.d/${SERVICE} restart
        sleep 3
done

for SERVICE in "http" "https" "mysql"; do
        
        if ( ! firewall-cmd --list-services | grep "$SERVICE" &> /dev/null ); then
                firewall-cmd --add-service=${SERVICE} --permanent
        fi
        
done

systemctl restart firewalld
sleep 3
systemctl enable firewalld

# 结束
mysql_remove
time_success

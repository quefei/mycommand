#!/bin/bash

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

############################################################
#
#       位置参量
#
############################################################
ARGUMENT1="$1"
ARGUMENT2="$2"
ARGUMENT3="$3"

set -eu
#set -x

if [[ "$(id -u)" != "0" ]]; then
        echo "Error: must run with root"
        exit 1
fi

############################################################
#
#       全局变量
#
############################################################
BACKUP_ROOT="/backup"
INCREMENTAL_DIR="centos-incremental"
FULL_DIR="centos-full"
BACKUP_TIME=$(date +"%Y-%m-%d-%H%M%S")
LOG_DIR="log"
LOG_FILE="backup-centos.log"
SOURCE_DIR="/"

############################################################
#
#       处理变量
#
############################################################
if [[ -z "$ARGUMENT1" ]]; then
        ARGUMENT1="incremental"
fi

if [[ -z "$ARGUMENT2" ]]; then
        ARGUMENT2="backup"
fi

if [[ -z "$ARGUMENT3" ]]; then
        ARGUMENT3="list"
fi

############################################################
#
#       主要函数
#
############################################################
default()
{
        echo "backup-centos: unrecognized option '$1'"
        
        echo "Usage: backup-centos <incremental|full> <backup|restore> [list|DATE]"
        echo ""
        
        exit 1
}

# 增量备份
incremental_backup()
{
        rsync -avhzAHXP --delete \
        -b --backup-dir=${BACKUP_ROOT}/${INCREMENTAL_DIR}/old-${BACKUP_TIME} \
        --exclude=${BACKUP_ROOT} \
        --exclude={"/dev","/media","/mnt","/proc","/sys","/tmp"} \
        ${SOURCE_DIR} ${BACKUP_ROOT}/${INCREMENTAL_DIR}/latest \
        2>> ${BACKUP_ROOT}/${LOG_DIR}/${LOG_FILE}
}

# 增量恢复
incremental_restore()
{
        if [[ -d "${BACKUP_ROOT}/${INCREMENTAL_DIR}/latest" ]]; then
                rsync -avhAHXP ${BACKUP_ROOT}/${INCREMENTAL_DIR}/latest/ ${SOURCE_DIR} \
                2>> ${BACKUP_ROOT}/${LOG_DIR}/${LOG_FILE}
        else
                echo "Error: backup does not exist"
                exit 1
        fi
}

# 完全备份
full_backup()
{
        if [[ ! -d "${BACKUP_ROOT}/${INCREMENTAL_DIR}/latest" ]]; then
                incremental_backup
                sleep 10
        fi
        
        /usr/bin/cp -afvl ${BACKUP_ROOT}/${INCREMENTAL_DIR}/latest ${BACKUP_ROOT}/${FULL_DIR}/${BACKUP_TIME} \
        2>> ${BACKUP_ROOT}/${LOG_DIR}/${LOG_FILE}
}

# 完全恢复
full_restore()
{
        if [[ -d "${BACKUP_ROOT}/${FULL_DIR}/$1" ]]; then
                rsync -avhAHXP ${BACKUP_ROOT}/${FULL_DIR}/$1/ ${SOURCE_DIR} \
                2>> ${BACKUP_ROOT}/${LOG_DIR}/${LOG_FILE}
        else
                echo "Error: backup does not exist"
                exit 1
        fi
}

full_backup_list()
{
        cd ${BACKUP_ROOT}/${FULL_DIR}
        ls -F | grep "^20[1-3][0-9]-[0-1][0-9]-[0-3][0-9]-[0-9]\{6\}/$" | sed "s/\/$//g" | sort -u
}

############################################################
#
#       主要操作
#
############################################################
mkdir -p ${BACKUP_ROOT}/{"$INCREMENTAL_DIR","$FULL_DIR","$LOG_DIR"}

case "$ARGUMENT1" in
        
        "incremental")
                
                case "$ARGUMENT2" in
                        
                        "backup")
                                incremental_backup
                          ;;
                        
                        "restore")
                                incremental_restore
                          ;;
                        
                        *)
                                default "$ARGUMENT2"
                          ;;
                        
                esac
                
          ;;
        
        "full")
                
                case "$ARGUMENT2" in
                        
                        "backup")
                                full_backup
                          ;;
                        
                        "restore")
                                
                                case "$ARGUMENT3" in
                                        
                                        "list")
                                                full_backup_list
                                          ;;
                                        
                                        20[1-3][0-9]-[0-1][0-9]-[0-3][0-9]-[0-9][0-9][0-9][0-9][0-9][0-9])
                                                full_restore "$ARGUMENT3"
                                          ;;
                                        
                                        *)
                                                default "$ARGUMENT3"
                                          ;;
                                        
                                esac
                                
                          ;;
                        
                        *)
                                default "$ARGUMENT2"
                          ;;
                        
                esac
                
          ;;
        
        *)
                default "$ARGUMENT1"
          ;;
        
esac
